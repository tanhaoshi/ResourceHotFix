apply plugin: 'com.android.application'
apply plugin: com.zhou.buildsrc.HotfixPlugin

HotfixExt{
    debugOn true
    output "xxxx"// 输出到哪里
    applicationName "com.orange.resourcehotfix"// 应用包名？
}


android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.orange.resourcehotfix"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a', "arm64-v8a"
        }

        packagingOptions {
            exclude 'META-INF/rxjava.properties'
        }
    }

    // 1.8编译环境
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            if (outputFileName.endsWith('.apk')) {
                outputFileName = "resource_hotfix_${defaultConfig.versionName}.apk"
            }
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    aaptOptions {
        File publicTxtFile = project.rootProject.file('generate_public.txt')
        if (publicTxtFile.exists()) {
            additionalParameters "--stable-ids", "${project.rootProject.file('generate_public.txt').absolutePath}"
        } else {
            additionalParameters "--emit-ids", "${project.rootProject.file('generate_public.txt').absolutePath}"
        }
    }

    sourceSets.main {
        jniLibs.srcDir 'libs'
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    //fast json 解析
    implementation 'com.alibaba:fastjson:1.2.10'

    //glide 图片加载
    implementation 'com.github.bumptech.glide:glide:4.11.0'

    //rx java and android
    implementation 'io.reactivex.rxjava2:rxjava:2.0.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation "org.reactivestreams:reactive-streams:1.0.2"
    //retrofit 网络请求框架 加网络适配器 及json转换器
    implementation 'com.squareup.retrofit2:retrofit:2.0.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    //android utils 集合
    implementation 'com.blankj:utilcodex:1.29.0'

    //分包
    implementation 'com.android.support:multidex:1.0.1'

    //黄油刀 注解
    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'

    implementation project(':hotfix')
    implementation project(':sitesign_master')
}
